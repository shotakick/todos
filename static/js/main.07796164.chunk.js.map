{"version":3,"sources":["serviceWorker.ts","state/ducks/auth/actions.ts","state/ducks/auth/reducers.ts","services/auth.ts","client/auth.ts","state/ducks/auth/sagas.ts","state/ducks/auth/index.ts","state/ducks/todos/actions.ts","state/ducks/todos/reducers.ts","state/ducks/todos/selectors.ts","services/todos.ts","client/todos.ts","state/ducks/todos/sagas.ts","state/ducks/todos/index.ts","state/ducks/index.ts","state/sagas.ts","state/configureStore.ts","routes.ts","state/selectors.ts","utils/date.ts","views/containers/DetailWindow.ts","views/components/DetailWindow.tsx","views/components/LoginWindow.tsx","views/containers/LoginWindow.ts","views/components/TitleEditor.tsx","views/components/TodoItem.tsx","views/containers/TodoItem.ts","views/components/TodoList.tsx","views/containers/TodoList.ts","views/components/MainContents.tsx","views/containers/MainContens.ts","views/components/MainFooter.tsx","views/containers/MainFooter.ts","views/components/MainHeader.tsx","views/containers/MainHeader.ts","views/components/MainWindow.tsx","views/containers/MainWindow.ts","views/components/PrivateRoute.tsx","views/containers/PrivateRoute.ts","views/containers/TodoApp.ts","views/components/TodoApp.tsx","views/components/AppFooter.tsx","views/components/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","factory","actionCreatorFactory","authActions","login","authenticate","asyncAuth","async","reducerWithInitialState","case","started","state","payload","isPrepared","isAuthing","failed","error","done","isAuthed","loginUser","result","id","jwtSecretKey","process","_ref","pass","Promise","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","resolve","reject","users","user","token","wrap","_context","prev","next","JSON","parse","localStorage","find","compareSync","Error","jwt","sign","t0","signup","t1","sent","stop","_x","_x2","apply","this","arguments","_ref3","_ref4","_callee2","hash","_context2","hashSync","stringify","concat","toConsumableArray","_x3","_x4","verify","decoded","param","server","saveToken","abrupt","getToken","sessionStorage","authSaga","handleLogin","handleAuth","takeLatest","type","_marked","action","call","_marked2","_context3","_marked3","authApi","_len","authParam","_key","_args4","_context4","put","length","Array","params","_marked4","reducer","TodosUpdateActionTypePrefix","updateActionFactory","fetchActionFactory","todosActions","addTodo","setTodo","deleteTodo","toggleCompleteTodo","toggleCompleteAll","clearCompleted","fetchData","asyncFetchData","todoList","actions","isFetching","owner","objectSpread","title","isCompleted","createdAt","updatedAt","targetIndex","findIndex","todo","newTodo","slice","doComplete","map","filter","getTodoList","todos","getTodoListOwner","getActiveTodoList","createSelector","getCompletedTodoList","getKey","fetchTodoList","Date","setTodoList","_x5","subscribe","_callee3","onUpdate","listener","event","key","addEventListener","removeEventListener","_x6","_x7","_x8","observer","then","unSubscribe","todosSaga","syncMasterToStore","syncStoreToMaster","startsWith","sagas_marked","sagas_marked2","delay","select","sagas_marked3","createRootReducer","history","combineReducers","auth","router","connectRouter","rootSaga","reloadDataSaga","handleUpdateStorageEvent","fork","state_sagas_marked","handleEventTask","take","isRunning","cancel","state_sagas_marked2","updateListenerChannelCreator","updateListenerChannel","eventChannel","emitter","cancelled","close","finish","state_sagas_marked3","configureStore","composeEnhancers","composeWithDevTools","sagaMiddleware","reduxSaga","store","createStore","applyMiddleware","routerMiddleware","run","Path","Paths","main","getVisibleTodosAtPath","pathname","path","getTodoAtDetailPath","matchPath","Number","Settings","defaultLocale","toFormatedDate","date","DateTime","fromJSDate","toFormat","DetailWindow","connect","props","react_default","createElement","Dimmer","active","Loader","react_router","to","_props$todo","Fragment","Helmet_default","Segment","Header","size","Divider","List","Item","idField","passField","initialValues","_initialValues","defineProperty","validate","values","errors","test","LoginWindow","onLoggedIn","handleSubmit","React","useCallback","_id","setFieldError","message","setSubmitting","from","index_es","onSubmit","validateOnChange","label","name","inputProps","autoFocus","autoComplete","Grid","GridColumn","textAlign","Submit","MainContents","dispatch","InnerComponent","TitleEditor","value","onOK","onCancel","behaviorOnBlur","isResetOnOut","objectWithoutProperties","inputRef","useRef","_useState","useState","_useState2","slicedToArray","inputText","setInputText","handleChange","e","target","current","trim","handleCancel","handleBlur","handleKeyDown","assign","ref","onChange","onBlur","onKeyDown","TodoItem","onToggle","onDelete","isEditing","setEditing","openEditor","closeEditor","handleEditOK","className","classNames","completed","editing","checked","onDoubleClick","react_router_dom","generatePath","onClick","components_TitleEditor","newTitle","TodoList","containers_TodoItem","todoCount","activeTodoCount","handleToggleAll","hidden","htmlFor","containers_TodoList","MainFooter","isShowFooter","activeCount","completedCount","exact","activeClassName","handleClearCompleted","MainHeader","onInputTodo","placeholder","MainWindow","containers_MainHeader","MainContens","containers_MainFooter","PrivateRoute","isAuthenticated","Component","component","rest","render","routeProps","TodoApp","isAuthPrepared","useEffect","containers_PrivateRoute","AppFooter","mainMessage","App","containers_TodoApp_TodoApp","AppFooter_AppFooter","__webpack_require__","d","__webpack_exports__","src_history","createBrowserHistory","ReactDOM","es","esm","views_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07796164.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actionCreatorFactory } from 'typescript-fsa';\n\n// Action payloads\nexport type LoginPayload = { id: string; pass: string };\nexport type AuthResult = { id: string };\n\n// Action creators\nconst factory = actionCreatorFactory('AUTH_ACTION');\nexport const authActions = {\n  login: factory<LoginPayload>('LOGIN'),\n  authenticate: factory<void>('AUTHENTICATE'),\n  asyncAuth: factory.async<{}, AuthResult, Error>('ASYNC_AUTH'),\n  // asyncAuth: factory.async<void, AuthResult>('ASYNC_AUTH'), // Paramsへのvoid指定は'typescript-fsa-reducers'が対応していないっぽい?\n};\nexport default authActions;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport authActions from './actions';\n\nexport type AuthState = {\n  isPrepared?: boolean;\n  isAuthed?: boolean;\n  isAuthing?: boolean;\n  error?: Error;\n  loginUser?: string;\n};\n\nexport default reducerWithInitialState<AuthState>({})\n  .case(authActions.asyncAuth.started, (state, payload) => ({\n    isPrepared: state.isPrepared,\n    isAuthing: true,\n  }))\n  .case(authActions.asyncAuth.failed, (state, payload) => ({\n    isPrepared: true,\n    error: payload.error,\n  }))\n  .case(authActions.asyncAuth.done, (state, payload) => ({\n    isPrepared: true,\n    isAuthed: true,\n    loginUser: payload.result.id,\n  }));\n","import { compareSync, hashSync } from 'bcryptjs';\nimport jwt, { VerifyErrors } from 'jsonwebtoken';\n\nconst userSaveKey = 'todos:users';\nconst saltRounds = 10;\nconst jwtSecretKey = process.env.REACT_APP_JWT_SECRET_KEY || 'jwt_key';\n\nexport interface User {\n  id: string;\n  pass: string;\n}\n\nexport const login = ({ id, pass }: User): Promise<{ token: string }> => {\n  return new Promise(async (resolve, reject) => {\n    const users: User[] = JSON.parse(localStorage[userSaveKey] || '[]');\n    const user = users.find(user => user.id === id);\n\n    if (user) {\n      if (!pass || !compareSync(pass, user.pass)) reject(new Error('Invalid password'));\n      const token = jwt.sign({ id }, jwtSecretKey);\n      resolve({ token });\n    } else {\n      resolve(await signup({ id, pass }));\n    }\n  });\n};\n\nexport const signup = ({ id, pass }: User): Promise<{ token: string }> => {\n  return new Promise(async (resolve, reject) => {\n    const users: User[] = JSON.parse(localStorage[userSaveKey] || '[]');\n    if (users.find(user => user.id === id)) reject(new Error('User already exists'));\n\n    const hash = pass && hashSync(pass, saltRounds);\n    localStorage[userSaveKey] = JSON.stringify([...users, { id, pass: hash }]);\n\n    const token = jwt.sign({ id }, jwtSecretKey);\n    resolve({ token });\n  });\n};\n\nexport const authenticate = (token: string, id?: string): Promise<{ id: string }> => {\n  return new Promise((resolve, reject) => {\n    jwt.verify(token, jwtSecretKey, (error: VerifyErrors, decoded: any) => {\n      if (error) reject(error);\n      if (id && id !== decoded.id) reject(new Error('Unmatched id'));\n      resolve(decoded);\n    });\n  });\n};\n","import * as server from '../services/auth';\n\nconst tokenKey = 'todos:token';\n\ninterface LoginParam {\n  id: string;\n  pass: string;\n}\n\nexport const login = async (param: LoginParam): Promise<{ id: string }> => {\n  const { token } = await server.login(param);\n  saveToken(token);\n  return param;\n};\n\nexport const authenticate = async (): Promise<{ id: string }> => {\n  const token = getToken();\n  if (!token) throw new Error('Not authenticated');\n  return await server.authenticate(token);\n};\n\nexport const getToken = () => sessionStorage[tokenKey];\nexport const saveToken = (token: string) => (sessionStorage[tokenKey] = token);\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { Action } from 'typescript-fsa';\nimport { authenticate, login } from '../../../client/auth';\nimport authActions, { LoginPayload } from './actions';\n\nexport function* authSaga() {\n  yield takeLatest(authActions.login.type, handleLogin);\n  yield takeLatest(authActions.authenticate.type, handleAuth);\n}\n\nfunction* handleLogin(action: Action<LoginPayload>) {\n  yield call(asyncAuth, login, action.payload.id, action.payload.pass);\n}\n\nfunction* handleAuth() {\n  yield call(asyncAuth, authenticate);\n}\n\nfunction* asyncAuth<Fn extends (...args: any[]) => { id: string }>(\n  authApi: Fn,\n  ...authParam: Parameters<Fn>\n) {\n  yield put(authActions.asyncAuth.started({}));\n\n  try {\n    const { id } = yield call(authApi, ...authParam);\n\n    yield put(\n      authActions.asyncAuth.done({\n        params: {},\n        result: { id },\n      }),\n    );\n  } catch (error) {\n    yield put(\n      authActions.asyncAuth.failed({\n        params: {},\n        error,\n      }),\n    );\n  }\n}\n","import reducer from './reducers';\nexport default reducer;\n\nexport * from './reducers';\nexport * from './actions';\nexport * from './sagas';\n","import { actionCreatorFactory } from 'typescript-fsa';\nimport { Todo } from '../../../models/todo';\n\n// Action payloads\nexport type AddTodoPayload = Pick<Todo, 'title' | 'createdAt'>;\nexport type SetTodoPayload = Pick<Todo, 'id' | 'title' | 'updatedAt'>;\nexport type DeleteTodoPayload = Pick<Todo, 'id'>;\nexport type ToggleCompleteTodoPayload = Pick<Todo, 'id' | 'updatedAt'>;\nexport type ToggleCompleteAllPayload = Pick<Todo, 'updatedAt'>;\nexport type FetchDataPayload = { owner: string };\nexport type FetchedResult = { todoList: Todo[] };\n\n// Action creators\nexport const TodosUpdateActionTypePrefix = 'TODOS_UPDATE_ACTION';\nconst updateActionFactory = actionCreatorFactory(TodosUpdateActionTypePrefix);\nconst fetchActionFactory = actionCreatorFactory('TODOS_FETCH_ACTION');\nexport const todosActions = {\n  addTodo: updateActionFactory<AddTodoPayload>('ADD_TODO'),\n  setTodo: updateActionFactory<SetTodoPayload>('SET_TODO'),\n  deleteTodo: updateActionFactory<DeleteTodoPayload>('DELETE_TODO'),\n  toggleCompleteTodo: updateActionFactory<ToggleCompleteTodoPayload>('TOGGLE_COMPLETE_TODO'),\n  toggleCompleteAll: updateActionFactory<ToggleCompleteAllPayload>('TOGGLE_COMPLETE_ALL'),\n  clearCompleted: updateActionFactory<void>('CLEAR_COMPLETED'),\n  fetchData: fetchActionFactory<FetchDataPayload>('FETCH_DATA'),\n  asyncFetchData: fetchActionFactory.async<FetchDataPayload, FetchedResult>('ASYNC_FETCH_DATA'),\n};\nexport default todosActions;\n","import { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport { Todo } from '../../../models/todo';\nimport actions, {\n  AddTodoPayload,\n  DeleteTodoPayload,\n  SetTodoPayload,\n  ToggleCompleteAllPayload,\n  ToggleCompleteTodoPayload,\n} from './actions';\n\nexport const TodoIdOrigin = 1;\n\nexport interface TodosState {\n  isPrepared?: boolean;\n  isFetching?: boolean;\n  owner?: string;\n  todoList: Todo[];\n}\nconst initialState: TodosState = {\n  todoList: [],\n};\n\nexport default reducerWithInitialState<TodosState>(initialState)\n  .case(actions.addTodo, (state, payload) => addTodo(state, payload))\n  .case(actions.setTodo, (state, payload) => setTodo(state, payload))\n  .case(actions.deleteTodo, (state, payload) => deleteTodo(state, payload))\n  .case(actions.toggleCompleteTodo, (state, payload) => toggleCompleteTodo(state, payload))\n  .case(actions.toggleCompleteAll, (state, payload) => toggleCompleteAll(state, payload))\n  .case(actions.clearCompleted, (state, payload) => clearCompleted(state))\n  .case(actions.asyncFetchData.started, (state, payload) => ({\n    isPrepared: state.isPrepared,\n    isFetching: true,\n    todoList: [],\n  }))\n  .case(actions.asyncFetchData.failed, (state, payload) => ({\n    isPrepared: state.isPrepared,\n    isFetching: true,\n    todoList: [],\n  }))\n  .case(actions.asyncFetchData.done, (state, payload) => ({\n    isPrepared: true,\n    isFetching: false,\n    owner: payload.params.owner,\n    todoList: payload.result.todoList,\n  }));\n\n// Case Reducers\nconst addTodo = (state: TodosState, payload: AddTodoPayload): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  return {\n    ...state,\n    todoList: [\n      ...state.todoList,\n      {\n        id: state.todoList.length ? state.todoList[state.todoList.length - 1].id + 1 : TodoIdOrigin,\n        title: payload.title,\n        isCompleted: false,\n        createdAt: payload.createdAt,\n        updatedAt: payload.createdAt,\n      },\n    ],\n  };\n};\n\nconst setTodo = (state: TodosState, payload: SetTodoPayload): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  const targetIndex = state.todoList.findIndex(todo => todo.id === payload.id);\n  if (targetIndex === -1) return state;\n\n  const newTodo = {\n    ...state.todoList[targetIndex],\n    title: payload.title,\n    updatedAt: payload.updatedAt,\n  };\n\n  return {\n    ...state,\n    todoList: [\n      ...state.todoList.slice(0, targetIndex),\n      newTodo,\n      ...state.todoList.slice(targetIndex + 1),\n    ],\n  };\n};\n\nconst deleteTodo = (state: TodosState, payload: DeleteTodoPayload): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  const targetIndex = state.todoList.findIndex(todo => todo.id === payload.id);\n  if (targetIndex === -1) return state;\n  return {\n    ...state,\n    todoList: state.todoList.slice(0, targetIndex).concat(state.todoList.slice(targetIndex + 1)),\n  };\n};\n\nconst toggleCompleteTodo = (state: TodosState, payload: ToggleCompleteTodoPayload): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  const targetIndex = state.todoList.findIndex(todo => todo.id === payload.id);\n  if (targetIndex === -1) return state;\n\n  const newTodo = {\n    ...state.todoList[targetIndex],\n    isCompleted: !state.todoList[targetIndex].isCompleted,\n    updatedAt: payload.updatedAt,\n  };\n\n  return {\n    ...state,\n    todoList: [\n      ...state.todoList.slice(0, targetIndex),\n      newTodo,\n      ...state.todoList.slice(targetIndex + 1),\n    ],\n  };\n};\n\nconst toggleCompleteAll = (state: TodosState, payload: ToggleCompleteAllPayload): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  const doComplete = !!state.todoList.find(todo => !todo.isCompleted);\n  return {\n    ...state,\n    todoList: state.todoList.map(todo =>\n      doComplete === todo.isCompleted\n        ? todo\n        : { ...todo, isCompleted: !todo.isCompleted, updatedAt: payload.updatedAt },\n    ),\n  };\n};\n\nconst clearCompleted = (state: TodosState): TodosState => {\n  if (!state.isPrepared || state.isFetching) return state;\n\n  return {\n    ...state,\n    todoList: state.todoList.filter(todo => !todo.isCompleted),\n  };\n};\n","import { createSelector } from 'reselect';\nimport { ReduxRootState } from '..';\n\nexport const getTodoList = ({ todos }: ReduxRootState) => todos.todoList;\nexport const getTodoListOwner = ({ todos }: ReduxRootState) => todos.owner;\n\nexport const getActiveTodoList = createSelector(\n  getTodoList,\n  todoList => todoList.filter(todo => !todo.isCompleted),\n);\n\nexport const getCompletedTodoList = createSelector(\n  getTodoList,\n  todoList => todoList.filter(todo => todo.isCompleted),\n);\n","import { Todo } from '../models/todo';\nimport { authenticate } from './auth';\n\nconst keyPrefix = 'todos:data:';\nexport const getKey = (owner: string) => keyPrefix + owner;\n\nexport const fetchTodoList = async (token: string, owner: string): Promise<Todo[]> => {\n  await authenticate(token, owner);\n  const todoList: any[] = JSON.parse(localStorage[getKey(owner)] || '[]');\n  return todoList.map(todo => ({\n    ...todo,\n    createdAt: new Date(todo.createdAt),\n    updatedAt: new Date(todo.updatedAt),\n  }));\n};\n\nexport const setTodoList = async (token: string, owner: string, todoList: Todo[]) => {\n  await authenticate(token, owner);\n  localStorage[getKey(owner)] = JSON.stringify(todoList);\n};\n\nexport const subscribe = async (\n  token: string,\n  owner: string,\n  onUpdate: () => void,\n): Promise<() => void> => {\n  await authenticate(token, owner);\n\n  const listener = (event: StorageEvent) => {\n    event.key === getKey(owner) && onUpdate();\n  };\n  window.addEventListener('storage', listener);\n\n  // 購読解除関数を返す\n  return () => window.removeEventListener('storage', listener);\n};\n","import { Todo } from '../models/todo';\nimport * as server from '../services/todos';\nimport { getToken } from './auth';\n\nexport const fetchTodoList = async (owner: string): Promise<Todo[]> => {\n  return await server.fetchTodoList(getToken(), owner);\n};\n\nexport const setTodoList = async (owner: string, todoList: Todo[]) => {\n  await server.setTodoList(getToken(), owner, todoList);\n};\n\n// NOTE: とりあえずの仮実装\nexport const subscribe = (owner: string, onUpdate: () => void) => {\n  const observer: { onUpdate: () => void; unSubscribe?: () => void } = { onUpdate };\n  server\n    .subscribe(getToken(), owner, onUpdate)\n    .then(unSubscribe => (observer.unSubscribe = unSubscribe));\n  return observer;\n};\n","import { call, delay, put, select, takeLatest } from 'redux-saga/effects';\nimport { Action } from 'typescript-fsa';\nimport { fetchTodoList, setTodoList } from '../../../client/todos';\nimport { FetchDataPayload, todosActions, TodosUpdateActionTypePrefix } from './actions';\nimport { getTodoList, getTodoListOwner } from './selectors';\n\nexport function* todosSaga() {\n  yield takeLatest(todosActions.fetchData.type, syncMasterToStore);\n  yield takeLatest(\n    (action: { type: string }) => action.type.startsWith(TodosUpdateActionTypePrefix),\n    syncStoreToMaster,\n  );\n}\n\nfunction* syncMasterToStore(action: Action<FetchDataPayload>) {\n  yield put(todosActions.asyncFetchData.started(action.payload));\n\n  try {\n    const todoList = yield call(fetchTodoList, action.payload.owner);\n\n    yield put(\n      todosActions.asyncFetchData.done({\n        params: action.payload,\n        result: { todoList },\n      }),\n    );\n  } catch (error) {\n    yield put(\n      todosActions.asyncFetchData.failed({\n        params: action.payload,\n        error,\n      }),\n    );\n  }\n}\n\nfunction* syncStoreToMaster() {\n  // Storeに情報が格納されるのを待ってから処理する\n  yield delay(1000);\n\n  const todoList = yield select(getTodoList);\n  const owner = yield select(getTodoListOwner);\n\n  yield call(setTodoList, owner, todoList);\n}\n","import reducer from './reducers';\nexport default reducer;\n\nexport * from './reducers';\nexport * from './actions';\nexport * from './selectors';\nexport * from './sagas';\n","import { connectRouter, RouterState } from 'connected-react-router';\nimport { combineReducers } from 'redux';\nimport auth, { AuthState } from './auth';\nimport todos, { TodosState } from './todos';\n\n// Root state\nexport interface ReduxRootState {\n  auth: AuthState;\n  todos: TodosState;\n  router: RouterState;\n}\n\n// Root reducer\nexport const createRootReducer = (history: any) => {\n  return combineReducers<ReduxRootState>({\n    auth,\n    todos,\n    router: connectRouter(history),\n  });\n};\nexport default createRootReducer;\n","import { eventChannel, Task } from 'redux-saga';\nimport { call, cancelled, fork, put, take } from 'redux-saga/effects';\nimport { Success } from 'typescript-fsa';\nimport { subscribe } from '../client/todos';\nimport { authActions, AuthResult, authSaga } from './ducks/auth';\nimport { todosActions, todosSaga } from './ducks/todos';\n\nexport default function* rootSaga() {\n  yield fork(authSaga);\n  yield fork(todosSaga);\n  yield fork(reloadDataSaga);\n}\n\n// ログイン時や他ウィンドウでのデータ更新時におけるデータ再読み込みを管理\nfunction* reloadDataSaga() {\n  let handleEventTask: Task | undefined;\n\n  while (true) {\n    const { payload } = yield take(authActions.asyncAuth.done.type);\n    const owner = (payload as Success<{}, AuthResult>).result.id;\n\n    yield put(todosActions.fetchData({ owner }));\n\n    if (handleEventTask && handleEventTask.isRunning()) {\n      handleEventTask.cancel();\n    }\n\n    handleEventTask = yield fork(handleUpdateStorageEvent, owner);\n  }\n}\n\nfunction* handleUpdateStorageEvent(owner: string) {\n  const updateListenerChannelCreator = () => {\n    return eventChannel(emitter => {\n      // NOTE: とりあえずの暫定実装\n      const observer = subscribe(owner, () => emitter({}));\n      return () => observer.unSubscribe && observer.unSubscribe();\n    });\n  };\n  const updateListenerChannel = yield call(updateListenerChannelCreator);\n\n  try {\n    while (true) {\n      yield take(updateListenerChannel);\n      yield put(todosActions.fetchData({ owner }));\n    }\n  } finally {\n    if (yield cancelled()) {\n      updateListenerChannel.close();\n    }\n  }\n}\n","import { routerMiddleware } from 'connected-react-router';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxSaga from 'redux-saga';\nimport { createRootReducer } from './ducks';\nimport rootSaga from './sagas';\n\nexport const configureStore = (history: any) => {\n  const composeEnhancers = composeWithDevTools({\n    // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n  });\n\n  const sagaMiddleware = reduxSaga();\n\n  const store = createStore(\n    createRootReducer(history),\n    composeEnhancers(\n      applyMiddleware(\n        routerMiddleware(history),\n        sagaMiddleware,\n        // sagaでの実装に変更したので削除\n        // saveToLocalStorage<ReduxRootState>({\n        //   key: getSaveTodosKey,\n        //   filter: getSaveTodosFilter,\n        //   triggers: [TodosActionTypePrefix],\n        // }),\n      ),\n    ),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\nexport default configureStore;\n","export const Path = {\n  root: '/',\n  showAll: '/',\n  showActive: '/active',\n  showCompleted: '/completed',\n  detail: '/detail/:id',\n  login: '/login',\n};\nexport const Paths = {\n  main: [Path.showAll, Path.showActive, Path.showCompleted],\n};\n\nexport interface DetailMatchParams {\n  id: string;\n}\n","import { matchPath } from 'react-router';\nimport { createSelector } from 'reselect';\nimport { DetailMatchParams, Path } from '../routes';\nimport { ReduxRootState } from './ducks';\nimport { getActiveTodoList, getCompletedTodoList, getTodoList } from './ducks/todos';\n\nexport const getCurrentPath = (state: ReduxRootState) => state.router.location.pathname;\n\nexport const getMatchAtDetailPath = (state: ReduxRootState) => {\n  return matchPath<DetailMatchParams>(state.router.location.pathname, Path.detail);\n};\n\nexport const getVisibleTodosAtPath = createSelector(\n  [(state: ReduxRootState) => state, getCurrentPath],\n  (state, path) => {\n    switch (path) {\n      case Path.showActive:\n        return getActiveTodoList(state);\n      case Path.showCompleted:\n        return getCompletedTodoList(state);\n      default:\n        return getTodoList(state);\n    }\n  },\n);\n\nexport const getTodoAtDetailPath = createSelector(\n  [getTodoList, getMatchAtDetailPath],\n  (todoList, match) => match && todoList.find(todo => todo.id === Number(match.params.id)),\n);\n","import { DateTime, Settings } from 'luxon';\n\nSettings.defaultLocale = 'ja';\n\nexport const toFormatedDate = (date: Date) => {\n  return DateTime.fromJSDate(date).toFormat('yyyy/M/d(EEE) HH:mm');\n};\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { getTodoAtDetailPath } from '../../state/selectors';\nimport {\n  DetailWindow as InnerComponent,\n  DetailWindowProps as InnerComponentProps,\n} from '../components/DetailWindow';\n\ntype StateProps = Pick<InnerComponentProps, 'todo' | 'isPrepared'>;\ntype DispatchProps = {};\ntype OwnProps = {};\n\nexport const DetailWindow = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    todo: getTodoAtDetailPath(state),\n    isPrepared: !!state.todos.isPrepared,\n  }),\n  {},\n)(InnerComponent);\nexport default DetailWindow;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Redirect } from 'react-router';\nimport { Dimmer, Divider, Header, List, Loader, Segment } from 'semantic-ui-react';\nimport { Todo } from '../../models/todo';\nimport { Path } from '../../routes';\nimport { toFormatedDate } from '../../utils/date';\n\nexport interface DetailWindowProps {\n  isPrepared: boolean;\n  todo?: Todo | null;\n}\n\nexport const DetailWindow: React.FC<DetailWindowProps> = props => {\n  if (!props.isPrepared) {\n    return (\n      <Dimmer active={true}>\n        <Loader>Loading</Loader>\n      </Dimmer>\n    );\n  }\n\n  if (!props.todo) return <Redirect to={Path.root} />;\n\n  const { id, title, isCompleted, createdAt, updatedAt } = props.todo;\n\n  return (\n    <>\n      <Helmet>\n        <title>詳細画面 - todos</title>\n      </Helmet>\n      <Segment>\n        <Header size=\"huge\">{`${id}. ${title}`}</Header>\n        <Divider />\n        <List>\n          <List.Item>{`status: ${isCompleted ? 'Completed' : 'Active'}`}</List.Item>\n          <List.Item>{`createdAt: ${toFormatedDate(createdAt)}`}</List.Item>\n          <List.Item>{`updatedAt: ${toFormatedDate(updatedAt)}`}</List.Item>\n        </List>\n      </Segment>\n    </>\n  );\n};\n","import { FormikActions, FormikErrors } from 'formik';\nimport { Button, Form, Input } from 'formik-semantic-ui';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport { Grid, GridColumn, Segment } from 'semantic-ui-react';\nimport { login } from '../../client/auth';\nimport { Path } from '../../routes';\n\nconst idField = 'loginUserId';\nconst passField = 'loginPassword';\n\ninterface FormValues {\n  [idField]: string;\n  [passField]: string;\n}\n\nconst initialValues: FormValues = {\n  [idField]: '',\n  [passField]: '',\n};\n\nconst validate = (values: FormValues) => {\n  const errors: FormikErrors<FormValues> = {};\n\n  if (!values[idField]) {\n    errors[idField] = 'Required';\n  } else if (!/^[a-z\\d]{1,40}$/i.test(values[idField])) {\n    errors[idField] = '半角英数字40文字以下';\n  }\n\n  if (!/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?\\d)[a-zA-Z\\d]{8,40}$/.test(values[passField])) {\n    errors[passField] = '半角英小文字大文字数字をそれぞれ1種類以上含む8文字以上40文字以下';\n  }\n\n  return errors;\n};\n\nexport type LoginWindowProps = RouteComponentProps & {\n  onLoggedIn: (id: string) => void;\n  isAuthed: boolean;\n};\n\n// TODO: コンポーネントの中でログイン処理を実装してしまったので外に出す。\nexport const LoginWindow: React.FC<LoginWindowProps> = props => {\n  const { onLoggedIn } = props;\n\n  const handleSubmit = React.useCallback(\n    async (values: FormValues, actions: FormikActions<FormValues>) => {\n      try {\n        const { id } = await login({ id: values[idField], pass: values[passField] });\n        onLoggedIn(id);\n      } catch (error) {\n        actions.setFieldError(passField, error.message);\n      }\n      actions.setSubmitting(false);\n    },\n    [onLoggedIn],\n  );\n\n  const { from } = props.location.state || { from: { pathname: Path.root } };\n  if (props.isAuthed) return <Redirect to={from} />;\n\n  return (\n    <Segment>\n      <Helmet>\n        <title>ログイン画面 - todos</title>\n      </Helmet>\n      <Form\n        initialValues={initialValues}\n        validate={validate}\n        onSubmit={handleSubmit}\n        validateOnChange={true}\n      >\n        <Input\n          label=\"ID\"\n          name={idField}\n          inputProps={{\n            autoFocus: true,\n            autoComplete: 'off',\n          }}\n        />\n        <Input label=\"Pass\" name={passField} inputProps={{ type: 'password' }} />\n\n        <Grid>\n          <GridColumn textAlign=\"center\">\n            <Button.Submit>ログイン</Button.Submit>\n          </GridColumn>\n        </Grid>\n      </Form>\n    </Segment>\n  );\n};\nexport default LoginWindow;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { authActions } from '../../state/ducks/auth';\nimport {\n  LoginWindow as InnerComponent,\n  LoginWindowProps as InnerComponentProps,\n} from '../components/LoginWindow';\n\ntype StateProps = Pick<InnerComponentProps, 'isAuthed'>;\ntype DispatchProps = Pick<InnerComponentProps, 'onLoggedIn'>;\ntype OwnProps = {};\n\nexport const MainContents = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    isAuthed: !!state.auth.isAuthed,\n  }),\n  dispatch => ({\n    onLoggedIn: (id: string) => {\n      dispatch(authActions.asyncAuth.done({ params: {}, result: { id } }));\n    },\n  }),\n)(InnerComponent);\nexport default MainContents;\n","import React, {\n  ChangeEventHandler,\n  InputHTMLAttributes,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\n\nexport interface TitleEditorProps extends InputHTMLAttributes<HTMLInputElement> {\n  value: string;\n  onOK: (newTitle: string) => void;\n  onCancel?: () => void;\n  behaviorOnBlur?: 'onOK' | 'onCancel' | 'None'; // default None\n  isResetOnOut?: boolean;\n}\n\nexport const TitleEditor: React.FC<TitleEditorProps> = props => {\n  const { value, onOK, onCancel, behaviorOnBlur, isResetOnOut, ...inputProps } = props;\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [inputText, setInputText] = useState(value);\n\n  const handleChange = useCallback<ChangeEventHandler<HTMLInputElement>>(\n    e => setInputText(e.target.value),\n    [setInputText],\n  );\n\n  const handleSubmit = useCallback(() => {\n    onOK(inputRef.current ? inputRef.current.value.trim() : value);\n    if (isResetOnOut) setInputText(value);\n  }, [onOK, value, isResetOnOut]);\n\n  const handleCancel = useCallback(() => {\n    if (onCancel) {\n      onCancel();\n      if (isResetOnOut) setInputText(value);\n    }\n  }, [value, onCancel, isResetOnOut]);\n\n  const handleBlur = useCallback(() => {\n    if (behaviorOnBlur === 'onOK') handleSubmit();\n    if (behaviorOnBlur === 'onCancel') handleCancel();\n  }, [behaviorOnBlur, handleSubmit, handleCancel]);\n\n  const handleKeyDown = useCallback<React.KeyboardEventHandler<HTMLInputElement>>(\n    e => (e.key === 'Enter' ? handleSubmit() : e.key === 'Escape' && handleCancel()),\n    [handleSubmit, handleCancel],\n  );\n\n  return (\n    <input\n      ref={inputRef}\n      value={inputText}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onKeyDown={handleKeyDown}\n      type=\"text\"\n      autoComplete=\"off\"\n      {...inputProps}\n    />\n  );\n};\nexport default TitleEditor;\n","import classNames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { generatePath, Link } from 'react-router-dom';\nimport { Todo } from '../../models/todo';\nimport { Path } from '../../routes';\nimport TitleEditor from './TitleEditor';\n\nexport interface TodoItemProps {\n  todo: Todo;\n  onToggle: () => void;\n  onDelete: () => void;\n  onChange: (newTitle: string) => void;\n}\n\nexport const TodoItem: React.FC<TodoItemProps> = props => {\n  const { id, title, isCompleted } = props.todo;\n  const { onToggle, onDelete, onChange } = props;\n\n  const [isEditing, setEditing] = useState(false);\n\n  const openEditor = useCallback(() => setEditing(true), []);\n  const closeEditor = useCallback(() => setEditing(false), []);\n\n  const handleEditOK = useCallback(\n    (title: string) => {\n      closeEditor();\n      title ? onChange(title) : onDelete();\n    },\n    [onChange, onDelete, closeEditor],\n  );\n\n  return (\n    <li\n      className={classNames({\n        completed: isCompleted,\n        editing: isEditing,\n      })}\n    >\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" checked={isCompleted} onChange={onToggle} />\n        <label onDoubleClick={openEditor}>\n          <Link to={generatePath(Path.detail, { id })}>{title}</Link>\n        </label>\n        <button className=\"destroy\" onClick={onDelete} />\n      </div>\n      {isEditing && (\n        <TitleEditor\n          className=\"edit\"\n          value={title}\n          onOK={handleEditOK}\n          onCancel={closeEditor}\n          behaviorOnBlur=\"onOK\"\n          autoFocus={true}\n        />\n      )}\n    </li>\n  );\n};\nexport default TodoItem;\n","import { connect } from 'react-redux';\nimport { todosActions } from '../../state/ducks/todos';\nimport {\n  TodoItem as InnerComponent,\n  TodoItemProps as InnerComponentProps,\n} from '../components/TodoItem';\n\ntype StateProps = {};\ntype DispatchProps = Pick<InnerComponentProps, 'onToggle' | 'onChange' | 'onDelete'>;\ntype OwnProps = Pick<InnerComponentProps, 'todo'>;\n\nexport const TodoItem = connect<StateProps, DispatchProps, OwnProps>(\n  null,\n  (dispatch, props) => ({\n    onToggle: () => {\n      dispatch(todosActions.toggleCompleteTodo({ id: props.todo.id, updatedAt: new Date() }));\n    },\n    onChange: (newTitle: string) => {\n      dispatch(todosActions.setTodo({ id: props.todo.id, title: newTitle, updatedAt: new Date() }));\n    },\n    onDelete: () => {\n      dispatch(todosActions.deleteTodo({ id: props.todo.id }));\n    },\n  }),\n)(InnerComponent);\nexport default TodoItem;\n","import React from 'react';\nimport { Todo } from '../../models/todo';\nimport TodoItem from '../containers/TodoItem';\n\nexport interface TodoListProps {\n  todoList: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = props => {\n  return (\n    <ul className=\"todo-list\">\n      {props.todoList.map(todo => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  );\n};\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { getVisibleTodosAtPath } from '../../state/selectors';\nimport {\n  TodoList as InnerComponent,\n  TodoListProps as InnerComponentProps,\n} from '../components/TodoList';\n\ntype StateProps = Pick<InnerComponentProps, 'todoList'>;\ntype DispatchProps = {};\ntype OwnProps = {};\n\nexport const TodoList = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({ todoList: getVisibleTodosAtPath(state) }),\n  {},\n)(InnerComponent);\nexport default TodoList;\n","import React from 'react';\nimport TodoList from '../containers/TodoList';\n\nexport interface MainContentsProps {\n  todoCount: number;\n  activeTodoCount: number;\n  handleToggleAll: () => void;\n}\n\nexport const MainContents: React.FC<MainContentsProps> = props => {\n  const { todoCount, activeTodoCount, handleToggleAll } = props;\n\n  return (\n    <section className=\"main\" hidden={todoCount === 0}>\n      <input\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        type=\"checkbox\"\n        onChange={handleToggleAll}\n        checked={!activeTodoCount}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <TodoList />\n    </section>\n  );\n};\nexport default MainContents;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { getActiveTodoList, getTodoList, todosActions } from '../../state/ducks/todos';\nimport {\n  MainContents as InnerComponent,\n  MainContentsProps as InnerComponentProps,\n} from '../components/MainContents';\n\ntype StateProps = Pick<InnerComponentProps, 'todoCount' | 'activeTodoCount'>;\ntype DispatchProps = Pick<InnerComponentProps, 'handleToggleAll'>;\ntype OwnProps = {};\n\nexport const MainContents = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    todoCount: getTodoList(state).length,\n    activeTodoCount: getActiveTodoList(state).length,\n  }),\n  dispatch => ({\n    handleToggleAll: () => dispatch(todosActions.toggleCompleteAll({ updatedAt: new Date() })),\n  }),\n)(InnerComponent);\nexport default MainContents;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Path } from '../../routes';\n\nexport interface MainFooterProps {\n  activeCount: number;\n  completedCount: number;\n  handleClearCompleted: () => void;\n}\n\nexport const MainFooter: React.FC<MainFooterProps> = props => {\n  const isShowFooter = props.activeCount || props.completedCount;\n\n  return (\n    <footer className=\"footer\" hidden={!isShowFooter}>\n      <span className=\"todo-count\">\n        <strong>{props.activeCount}</strong> {props.activeCount === 1 ? 'item' : 'items'} left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <NavLink exact={true} activeClassName=\"selected\" to={Path.showAll}>\n            All\n          </NavLink>\n        </li>{' '}\n        <li>\n          <NavLink exact={true} activeClassName=\"selected\" to={Path.showActive}>\n            Active\n          </NavLink>\n        </li>{' '}\n        <li>\n          <NavLink exact={true} activeClassName=\"selected\" to={Path.showCompleted}>\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n      <button\n        hidden={!props.completedCount}\n        className=\"clear-completed\"\n        onClick={props.handleClearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\nexport default MainFooter;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { getActiveTodoList, getCompletedTodoList, todosActions } from '../../state/ducks/todos';\nimport {\n  MainFooter as InnerComponent,\n  MainFooterProps as InnerComponentProps,\n} from '../components/MainFooter';\n\ntype StateProps = Pick<InnerComponentProps, 'activeCount' | 'completedCount'>;\ntype DispatchProps = Pick<InnerComponentProps, 'handleClearCompleted'>;\ntype OwnProps = {};\n\nexport const MainFooter = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    activeCount: getActiveTodoList(state).length,\n    completedCount: getCompletedTodoList(state).length,\n  }),\n  dispatch => ({\n    handleClearCompleted: () => dispatch(todosActions.clearCompleted()),\n  }),\n)(InnerComponent);\nexport default MainFooter;\n","import React from 'react';\nimport TitleEditor from './TitleEditor';\n\nexport interface MainHeaderProps {\n  onInputTodo: (text: string) => void;\n}\n\nexport const MainHeader: React.FC<MainHeaderProps> = props => {\n  const { onInputTodo } = props;\n  const handleSubmit = React.useCallback(\n    (newTodo: string) => {\n      newTodo && onInputTodo(newTodo);\n    },\n    [onInputTodo],\n  );\n\n  return (\n    <header className=\"header\">\n      <TitleEditor\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={''}\n        onOK={handleSubmit}\n        isResetOnOut={true}\n        autoFocus={true}\n      />\n    </header>\n  );\n};\nexport default MainHeader;\n","import { connect } from 'react-redux';\nimport { todosActions } from '../../state/ducks/todos';\nimport {\n  MainHeader as InnerComponent,\n  MainHeaderProps as InnerComponentProps,\n} from '../components/MainHeader';\n\ntype StateProps = {};\ntype DispatchProps = Pick<InnerComponentProps, 'onInputTodo'>;\ntype OwnProps = {};\n\nexport const MainHeader = connect<StateProps, DispatchProps, OwnProps>(\n  null,\n  dispatch => ({\n    onInputTodo: (title: string) => {\n      dispatch(todosActions.addTodo({ title, createdAt: new Date() }));\n    },\n  }),\n)(InnerComponent);\nexport default MainHeader;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport MainContents from '../containers/MainContens';\nimport MainFooter from '../containers/MainFooter';\nimport MainHeader from '../containers/MainHeader';\n\nexport interface MainWindowProps {\n  isPrepared: boolean;\n}\n\nexport const MainWindow: React.FC<MainWindowProps> = props => {\n  return (\n    <>\n      <Helmet>\n        <title>todos</title>\n      </Helmet>\n      {props.isPrepared ? (\n        <div>\n          <MainHeader />\n          <MainContents />\n          <MainFooter />\n        </div>\n      ) : (\n        <Dimmer active={true}>\n          <Loader>Loading</Loader>\n        </Dimmer>\n      )}\n    </>\n  );\n};\nexport default MainWindow;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport {\n  MainWindow as InnerComponent,\n  MainWindowProps as InnerComponentProps,\n} from '../components/MainWindow';\n\ntype StateProps = Pick<InnerComponentProps, 'isPrepared'>;\ntype DispatchProps = {};\ntype OwnProps = {};\n\nexport const DetailWindow = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    isPrepared: !!state.todos.isPrepared,\n  }),\n  {},\n)(InnerComponent);\nexport default DetailWindow;\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\nimport { Path } from '../../routes';\n\nexport interface PrivateRouteProps extends RouteProps {\n  // component: React.ComponentType<RouteProps>;\n  component: any;\n  isAuthenticated: boolean;\n}\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = props => {\n  const { isAuthenticated, component: Component, ...rest } = props;\n\n  const render = React.useCallback(\n    routeProps => {\n      if (!isAuthenticated) {\n        return <Redirect to={{ pathname: Path.login, state: { from: routeProps.location } }} />;\n      }\n      return <Component {...routeProps} />;\n    },\n    [isAuthenticated],\n  );\n\n  return <Route {...rest} render={render} />;\n};\nexport default PrivateRoute;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport {\n  PrivateRoute as InnerComponent,\n  PrivateRouteProps as InnerComponentProps,\n} from '../components/PrivateRoute';\n\ntype StateProps = Pick<InnerComponentProps, 'isAuthenticated'>;\ntype DispatchProps = {};\ntype OwnProps = {};\n\nexport const PrivateRoute = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    isAuthenticated: !!state.auth.isAuthed,\n  }),\n  {},\n)(InnerComponent);\nexport default PrivateRoute;\n","import { connect } from 'react-redux';\nimport { ReduxRootState } from '../../state/ducks';\nimport { authActions } from '../../state/ducks/auth';\nimport {\n  TodoApp as InnerComponent,\n  TodoAppProps as InnerComponentProps,\n} from '../components/TodoApp';\n\ntype StateProps = Pick<InnerComponentProps, 'isAuthPrepared'>;\ntype DispatchProps = Pick<InnerComponentProps, 'authenticate'>;\ntype OwnProps = {};\n\nexport const TodoApp = connect<StateProps, DispatchProps, OwnProps, ReduxRootState>(\n  state => ({\n    isAuthPrepared: !!state.auth.isPrepared,\n  }),\n  dispatch => ({\n    authenticate: () => dispatch(authActions.authenticate()),\n  }),\n)(InnerComponent);\nexport default TodoApp;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { Path, Paths } from '../../routes';\nimport DetailWindow from '../containers/DetailWindow';\nimport LoginWindow from '../containers/LoginWindow';\nimport MainWindow from '../containers/MainWindow';\nimport PrivateRoute from '../containers/PrivateRoute';\n\nexport interface TodoAppProps {\n  isAuthPrepared: boolean;\n  authenticate: () => void;\n}\n\nexport const TodoApp: React.FC<TodoAppProps> = props => {\n  const { authenticate, isAuthPrepared } = props;\n\n  // ブラウザリロード対策: 再認証を試みる\n  React.useEffect(() => {\n    if (!isAuthPrepared) authenticate();\n  }, [isAuthPrepared, authenticate]);\n\n  if (!isAuthPrepared) {\n    return (\n      <Dimmer active={true}>\n        <Loader>Loading</Loader>\n      </Dimmer>\n    );\n  }\n\n  // TODO: <Switch>使うように修正。無効ページは<Redirect>で飛ばす。\n  return (\n    <section className=\"todoapp\">\n      <header>\n        <Link to={Path.root}>\n          <h1>todos</h1>\n        </Link>\n      </header>\n      <Route path={Path.login} component={LoginWindow} />\n      <PrivateRoute exact={true} path={Paths.main} component={MainWindow} />\n      <PrivateRoute exact={true} path={Path.detail} component={DetailWindow} />\n    </section>\n  );\n};\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { Paths } from '../../routes';\n\nexport const AppFooter: React.FC = () => {\n  const mainMessage = React.useCallback(() => <p>Double-click to edit a todo</p>, []);\n\n  return (\n    <footer className=\"info\">\n      <Route exact={true} path={Paths.main} render={mainMessage} />\n      <p>Created by Kikuchi, Shotaro</p>\n    </footer>\n  );\n};\nexport default AppFooter;\n","import React from 'react';\nimport { TodoApp } from '../containers/TodoApp';\nimport './App.css';\nimport { AppFooter } from './AppFooter';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <TodoApp />\n    <AppFooter />\n  </div>\n);\n\nexport default App;\n","import { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'todomvc-app-css/index.css';\nimport 'todomvc-common/base.css';\nimport * as serviceWorker from './serviceWorker';\nimport { configureStore } from './state/configureStore';\nimport App from './views/components/App';\n\nexport const history = createBrowserHistory();\nconst store = configureStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}